
class __MPService {
    private readonly pluginName = "MalwarelyticsPlugin";

    constructor() {}

    protected async callAsync<T>(name: string, ...args): Promise<T> {
      return await new Promise<T>((resolve, reject) => {
        cordova.exec((result: T)=> {
          resolve(result);
        }, (data: any) => {
          reject(new MalwarelyticsError(data as MalwarelyticsErrorType, ""))
        }, this.pluginName, name, args);
      });
    }

    protected call<T>(name: string, success: (result: T) => void, error: (err: MalwarelyticsError) => void, ...args) {
      cordova.exec(success, (data: any) => {
        if (error) {
          error(new MalwarelyticsError(data as MalwarelyticsErrorType, ""))
        }
      }, this.pluginName, name, args);
    }
  }