
/** Configuration of the Malwarelytics SDK for the Android platform. */
interface MalwarelyticsAndroidConfig {
    
    /** ISO 639-1 language code that the app will be used for UI localization. */
    languageCode?: string;

    /** Antivirus component configuration. If not set, default values are used. */
    antivirus?: MalwarelyticsAndroidAntivirusConfig;

    /** RASP component configuration. If not set, default values are used. */
    rasp?: MalwarelyticsAndroidRaspConfig;

    /** Configuration of customer grouping and naming in the Malwarelytics web console. */
    customerGrouping?: MalwarelyticsAndroidCustomerGroupingConfig;
}

/** Configuration of customer grouping and naming in the Malwarelytics web console. */
interface MalwarelyticsAndroidCustomerGroupingConfig {
    /**
     * Set custom source package name.
     * The value has to match application credentials defined in the web application.
     *
     * Maximum length of the value is 255 characters.
     */
    sourcePackageName?: string;
    /**
     * Set app app package name to obtain extra granularity
     * of the information displayed in the web application.
     * Distinguishes application purposes or segmentation in one organization.
     *
     * Maximum length of the value is 255 characters.
     */
    appPackageName?: string;
    /**
     * Set audience group ID to obtain extra granularity
     * of the information displayed in the web application.
     * Distinguishes users from different customer systems (RETAIL, CORPORATE, ...).
     *
     * Maximum length of the value is 20 characters.
     */
    audienceGroupId?: string;
}

/** 
 * Antivirus component configuration for Android platform
 */
interface MalwarelyticsAndroidAntivirusConfig {

    /** Malwarelytics in silent mode does not show any UI. Default is true. */
    enableSilentMode?: boolean;
        
    /** How often will be antivirus database checked (hourly). Default is 48 hours. */
    onlineCheckIntervalHours?: number;

    /** If databse should be performend on SDK initialize. Default is true. */
    updateOnInitialize?: boolean;
}

/**
 * Runtime Application Self-Protection Configuration for Android platform
 */
interface MalwarelyticsAndroidRaspConfig {

    /** Turn on/off automatic emulation detection. It is on by default. */
    checkEmulator?: boolean;

    /** Whether to terminate the app when emulator is automatically detected. It is off by default. */
    exitOnEmulator?: boolean;

    /** Turns on/off automatic root detection. It is on by default. */
    checkRoot?: boolean;

    /** Whether to terminate the app when rooted device is automatically detected. It is off by default. */
    exitOnRoot?: boolean;

    /** Whether to check if the device is using HTTP proxy. It is on by default. */
    checkHttpProxy?: boolean;

    /** Whether to exit if the device is using HTTP proxy. It is off by default. */
    exitOnHttpProxy?: boolean;

    /**
     * Minimum confidence value of heuristic root detections that triggers app termination. 
     * 
     * Works only if exitOnRoot is true. Possible values are between 0.0 (inclusive) and 1.0 (inclusive). The default value is 1.0.
     */
    exitOnRootMinConfidence?: number;

    /** Turns on/off automatic detection of attached debuggers. It is on by default. */
    checkDebugger?: boolean;

    /** Whether to terminate the app when an attached debugger is automatically detected. It is off by default. */
    exitOnDebugger?: boolean;

    /**
     * Turns on/off automatic repackaging detection. 
     * 
     * It is on by default but works only if signatureHash is set.
     */
    checkRepackaging?: boolean;

    /**
     * Whether to terminate the app when repackaging is automatically detected. 
     * 
     * It is on by default but works only if signatureHash is set.
     */
    exitOnRepackaging?: boolean;

    /**
     * SHA-1 of signing certificate(s). One or more values can be set. 
     * 
     * Expecting lowercase hex value without any byte separators. No default value is set.
     */
    signatureHash?: string;

    /** Turns on/off automatic screen sharing detection. It is on by default. */
    checkScreenSharing?: boolean;

    /** Whether to terminate teh app when screen sharing is automatically detected. It is off by default. */
    exitOnScreenSharing?: boolean;

    /** Turns on/off blocking taking screenshots and screen recording. It is on by default. */
    blockScreenshots?: boolean;

    /** 
     * Turn on/off blocking screen readers. It is on by default. 
     * 
     * Screen readers are blocked only when an enabled screen reader is detected that is not allowed in allowedScreenReaders. 
     */
    blockScreenReaders?: boolean;

    /** Defines collection of allowed screen readers. It is empty by default. */
    allowedScreenReaders?: Apk[];

    /** Sets custom name to be used for the app process. When set, turns off useStealthyProcessName. */
    customProcessName?: string;

    /**
     * Whether to use a stealthy name for the app's process. It is on by default. 
     * 
     * When true a name is selected randomly from a list of stealthy process names. It is turned off when customProcessName is set.
     */
    useStealthyProcessName?: boolean;

    /** 
     * Turn on/off blocking tapjacking. It is on by default. Tapjacking is blocked only when problematic apps meeting 
     * sensitivity criteria defined by blockTapjackingSensitivity are present. 
     */
    blockTapjacking?: boolean;

    /** 
     * Defines sensitivity for blocking tapjacking. The default value is ThreatIndex.HIGHLY_DANGEROUS. 
     */
    blockTapjackingSensitivity?: ThreatIndex;

    /**
     * Define whether to ignore system apps in blocking tapjacking. The default value is false
     */
    ignoreTapjackingSystemApps?: boolean;

    /**
     * Whether to exit if the device has ADB enabled. The default value is false.
     */
    exitOnAdbEnabled?: boolean;
}

/** Data that describes Android APK. */
interface Apk {
    packageName: string;
    signatureHash?: string;
}