//
// Copyright 2020 Wultra s.r.o.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions
// and limitations under the License.
//

//
// This hook removes leftover files when the plugin is uninstalled
//

const fs = require('fs');
const path = require('path');
const xml2js = require('xml2js');

const PLUGIN_ID = "cordova-plugin-malwarelytics"; // plugin ID
const androidPlatformRoot = "./platforms/android/"; // where the android files ar estored

function removeFiles() {

    const pluginXML = fs.readFileSync(`./plugins/${PLUGIN_ID}/plugin.xml`).toString();
    const parser = new xml2js.Parser();
    parser.parseString(pluginXML, (error, config) => {
        
        if (error) {
            console.warn("Malwarelytics: failed to parse plugin.xml file. Leftover files wont be deleted.")
            return;
        }

        if (!config.plugin.hasOwnProperty('platform'))  {
            console.warn("Malwarelytics: failed to locate platform element of the plugin file. Leftover files wont be deleted.");
            return;
        }

        // first remeove plugin source files
        
        for (let platform of config.plugin.platform) {
            // find android platform config
            if (platform['$'].name === 'android') {

                // find the path of the plugin source files
                if (platform.hasOwnProperty('source-file')) {

                    let sourceFiles = platform['source-file'];

                    // remove all source files (kotlin)
                    for (let sourceFile of sourceFiles) {

                        if (sourceFile['$'].hasOwnProperty('src')) {
                            
                            let src = sourceFile['$']['src'];
                            if (src.match(/\.kt/)) {

                                let srcParts = src.split('/');
                                let filename = srcParts[srcParts.length - 1];
                                let filepath = sourceFile['$']['target-dir'];
                                filepath = androidPlatformRoot+filepath+'/'+filename;
                                
                                if (fs.existsSync(path.resolve(filepath))) {
                                    fs.unlinkSync(filepath);
                                    console.log(`Removed Kotlin source file: ${filepath}`);
                                }
                            }
                        }
                    }
                }
                break;
            }
        }
    });

    // remove plugin generated config file

    const configClassName = "MalwarelyticsConfig";
    const configPackage = "com.wultra.android.cordova.malwarelytics.plugin";
    const configPath = "./platforms/android/app/src/main/java/" + configPackage.split(".").join("/");
    const configFile = `${configPath}/${configClassName}.kt`;
    if (fs.existsSync(path.resolve(configFile))) {
        fs.unlinkSync(configFile);
    }
}

let  deferral;

module.exports = function(ctx) {
    try {
        deferral = require('q').defer();
        removeFiles();
        deferral.resolve();
    } catch(e) {
        let msg = e.toString();
        console.dir(e);
        deferral.reject(msg);
        return deferral.promise;
    }
};
