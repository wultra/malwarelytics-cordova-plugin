#! /bin/zsh

set -e

# init
verbose=0

function showHelp {
    echo "Usage:
  $(basename "$0") [-v] -- Install app to an iOS device and start it.

  Designed to handle problems with installation using 'ios-deploy' with Xcode 15.

Options:
    -?, -h                  Show help
    -v                      Print verbose output"
}

function printVerbose {
  if [[ verbose -ne 0 ]]; then
    echo "$@"
  fi
}

function printSuccess {
    if [[ $? -eq 0 ]]; then
        echo "$@"
    fi
}

function parseArguments {
    local OPTIND=1
    # parse command line arguments
    while getopts "h?v" opt;
    do
        case "$opt" in
        h|\?)
            showHelp
            exit 0
            ;;
        v)
            verbose=1
            ;;
        esac
    done
    shift "$((OPTIND-1))"
}

parseArguments "$@"

# get device ID
deviceId=$(xcrun devicectl list devices | grep "connected\|available" | sed 's/.*\([[:xdigit:]]\{8\}-[[:xdigit:]]\{4\}-[[:xdigit:]]\{4\}-[[:xdigit:]]\{4\}-[[:xdigit:]]\{12\}\).*/\1/')
printVerbose ">>> Using device: $deviceId"

# uninstall
# bundleId="com.wultra.android.cordova.malwarelytics.demo"
# uninstallOutput=$(xcrun devicectl device uninstall app --device "$deviceId" "$bundleId")
# printVerbose "$uninstallOutput"
# printSuccess "Application uninstalled"

# install app to the device
builtApp="$(dirname "$0")/../platforms/ios/build/Debug-iphoneos/MalwarelyticsPluginTest.app"
printVerbose ">>> Installing app: $builtApp"
installOutput=$(xcrun devicectl device install app --device "$deviceId" "$builtApp")
printVerbose "$installOutput"
printSuccess "Application installed"

# start the app on the device
file=$(echo "$installOutput" | grep "installationURL:" | sed 's/.*installationURL: \(.*\)/\1/')
printVerbose ">>> Starting app installed to: $file"
startOutput=$(xcrun devicectl device process launch --device "$deviceId" "$file")
printVerbose "$startOutput"
printSuccess "Application started"