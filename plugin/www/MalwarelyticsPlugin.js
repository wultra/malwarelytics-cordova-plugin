/**
 * Each type matches to specific error case
 */
var MalwarelyticsErrorType;
(function (MalwarelyticsErrorType) {
    MalwarelyticsErrorType["GENERIC"] = "GENERIC";
})(MalwarelyticsErrorType || (MalwarelyticsErrorType = {}));
var MalwarelyticsError = /** @class */ (function () {
    function MalwarelyticsError(type, description, data) {
        if (data === void 0) { data = null; }
        this.type = type;
        this.data = data;
        this.description = description;
    }
    return MalwarelyticsError;
}());
var MalwarelyticsPlugin = /** @class */ (function () {
    function MalwarelyticsPlugin() {
        this.pluginName = "MalwarelyticsPlugin";
    }
    MalwarelyticsPlugin.prototype.initialize = function (username, password, signaturePublicKey, successCallback, errorCallback) {
        cordova.exec(successCallback, errorCallback, this.pluginName, "initialize", [username, password, signaturePublicKey]);
    };
    MalwarelyticsPlugin.prototype.triggerSmartProtection = function (successCallback, errorCallback) {
        cordova.exec(successCallback, errorCallback, this.pluginName, "triggerSmartProtection");
    };
    return MalwarelyticsPlugin;
}());
module.exports = new MalwarelyticsPlugin();
