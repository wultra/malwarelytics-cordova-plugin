package com.wultra.android.cordova.malwarelytics.plugin

import com.wultra.android.antimalware.*
import com.wultra.android.antimalware.update.*
import com.wultra.android.antimalware.internal.smartprotection.*
import org.apache.cordova.*
import org.json.JSONArray
import org.json.JSONException
import org.json.JSONObject
import android.content.Context
import android.content.Intent
import android.content.ComponentName
import android.widget.Toast
import android.app.job.*
import android.os.Build

class MalwarelyticsPlugin : CordovaPlugin() {

    private var antivirus: Antivirus? = null

    @Throws(JSONException::class)
    override fun execute(action: String, args: JSONArray, callbackContext: CallbackContext): Boolean {
        
        if (action == "initialize") {
            val username = args.getString(0)
            val password = args.getString(1)
            val signaturePublicKey = args.getString(2)
            this.initialize(username, password, signaturePublicKey, callbackContext)
            callbackContext.success("OK!")
            return true
        }

        if (action == "triggerSmartProtection") {
            this.triggerSmartProtection()
            callbackContext.success("OK!")
            return true
        }


        callbackContext.error("Action does not exist.")

        return false
    }

    fun initialize(username: String, password: String, signaturePublicKey:  String, callbackContext: CallbackContext) {

        val context = cordova.getActivity().getApplicationContext()
        
        if (this.antivirus != null) {
            Toast.makeText(context, "Antivirus already initialized", Toast.LENGTH_SHORT).show()
            return
        }

        val config = AntivirusConfig.Builder(context)
                        .smartProtectionConfig(
                            AntivirusConfig.SmartProtectionConfig.Builder()
                                .smartProtectionEnabled(true)
                                .silentModeEnabled(false)
                                .smartProtectionIntervalHours(72)
                                .build()
                        )
                        .threatMitigationUIConfig(AntivirusConfig.ThreatMitigationUIConfig.Builder().build())
                        .apiUsername(username)
                        .apiPassword(password)
                        .build()

        val antivirus = Antivirus.getInstance()
        antivirus.initializeAsync(config, object : Antivirus.InitializationObserver {
            override fun onInitialized() {
                Toast.makeText(context, "Antivirus Initialized", Toast.LENGTH_SHORT).show()
                callbackContext.success()
            }
        })
        this.antivirus = antivirus
    }

    fun triggerSmartProtection() {

        val activity = cordova.getActivity()
        val context = activity.getApplicationContext()
        val antivirus  = this.antivirus;

        if (antivirus == null || !antivirus.isInitialized()) {
            Toast.makeText(context, "Antivirus is not initialized", Toast.LENGTH_SHORT).show()
            return
        }

        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
            activity.startService(Intent(activity, SmartProtectionService::class.java))
        } else {
            activity.runOnUiThread {
                val jobScheduler = activity.getSystemService(Context.JOB_SCHEDULER_SERVICE) as JobScheduler
                jobScheduler.schedule(
                    JobInfo.Builder(
                        905,
                        ComponentName(activity, SmartProtectionJobService::class.java)
                    )
                    .setMinimumLatency(1)
                    .setOverrideDeadline(1)
                    .build()
                )
            }
        }

        Toast.makeText(context, "Job Scheduled", Toast.LENGTH_SHORT).show()
    }
}
